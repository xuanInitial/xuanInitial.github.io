<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初见</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xuaninitial.com/"/>
  <updated>2019-02-26T02:39:33.612Z</updated>
  <id>http://xuaninitial.com/</id>
  
  <author>
    <name>xuanInitial</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flutter upgrade  报错424</title>
    <link href="http://xuaninitial.com/2019/02/26/flutter-upgrade-%E6%8A%A5%E9%94%99424/"/>
    <id>http://xuaninitial.com/2019/02/26/flutter-upgrade-报错424/</id>
    <published>2019-02-26T02:28:05.000Z</published>
    <updated>2019-02-26T02:39:33.612Z</updated>
    
    <content type="html"><![CDATA[<p>执行更新：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flutter upgrade</div></pre></td></tr></table></figure><p>报错如下：</p><p>This is an unexpected error. Please run</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pub --trace upgrade --verbosity=error --no-packages-dir</div></pre></td></tr></table></figure><p>and include the logs in an issue on <a href="https://github.com/dart-lang/pub/issues/new" target="_blank" rel="external">https://github.com/dart-lang/pub/issues/new</a><br>Error: Unable to ‘pub upgrade’ flutter tool. Retrying in five seconds… (1 tries left)<br>Command ‘pub upgrade’ still failed after 10 tries, giving up.</p><p>解决方式：</p><p>卸载flutter SDK 重新安装 </p><p>//配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn</div><div class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source .bash_profile</div></pre></td></tr></table></figure><p>//下载SDK</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone -b dev https://github.com/flutter/flutter.git</div></pre></td></tr></table></figure><p>//配置SDK的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PATH=&quot;$PWD/flutter/bin:$PATH&quot;</div></pre></td></tr></table></figure><p> 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ./flutter</div><div class="line">flutter doctor</div></pre></td></tr></table></figure><p><strong>备注：</strong>执行flutter doctor的时候，可能会报上面同样的错误，耐心等待一下，挂梯子，重新执行</p><p>xcode工具链有问题的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">brew update</div><div class="line">        brew uninstall --ignore-dependencies libimobiledevice</div><div class="line">        brew uninstall --ignore-dependencies usbmuxd</div><div class="line">        brew install --HEAD usbmuxd</div><div class="line">        brew unlink usbmuxd</div><div class="line">        brew link usbmuxd</div><div class="line">        brew install --HEAD libimobiledevice</div><div class="line">        brew install ideviceinstaller</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;执行更新：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;d
      
    
    </summary>
    
      <category term="Flutter" scheme="http://xuaninitial.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://xuaninitial.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>2018年终总结</title>
    <link href="http://xuaninitial.com/2019/01/17/2018%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://xuaninitial.com/2019/01/17/2018年终总结/</id>
    <published>2019-01-17T07:13:27.000Z</published>
    <updated>2019-01-17T07:19:44.504Z</updated>
    
    <content type="html"><![CDATA[<p>​    作为程序员，到年底都会进行一次自我反思或者总结，回过头来看看这一年自    己成长了多少。</p><p>​    18年忙忙碌碌的一年。4月份之前一直在出差，博客都没怎么更新导致今年的产出有点少8篇</p><p>​    5~7月一段颓废期（生活方面导致）</p><p>​    7月以后回归正常</p><h4 id="学习："><a href="#学习：" class="headerlink" title="学习："></a>学习：</h4><p>​    swift 系统的学习了一遍，有自己的项目，也改写了一部分公司的项目</p><p>​       逆向视频完整的看完了，了解了工具的使用，对App的逆向调试模式的思考，缺        少实践</p><p>​    flutter年底了刚开始学习</p><p>​    被朋友吐槽字写的难看苦练两个多月（有点效果吧，起码写的自己认识）    </p><h4 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h4><p>《解忧杂货铺》</p><blockquote><p>我们总是在选择，也总是在犹豫，其实我们自己心中已经有答案，跟着感觉走就可以了</p></blockquote><p>《拉普拉斯的魔女》 </p><blockquote><p>有时候未知也是一种幸福</p></blockquote><p>《地铁异事薄》</p><blockquote><p>书名不错</p></blockquote><p>《活着》–余华</p><blockquote><p>活着就有希望</p></blockquote><p>《眨眼之间》</p><blockquote><p>在自己擅长的领域，一眨眼做出的决定，可能和三思后行的结果一样 </p></blockquote><p>《番茄工作法图解》</p><blockquote><p>专注一件事情，合理的安排时间</p></blockquote><p>《正向沟通—— 非暴力人际沟通技巧》暂未看完</p><h4 id="2019-计划"><a href="#2019-计划" class="headerlink" title="2019 计划"></a>2019 计划</h4><ul><li>坚持博客一个月最少更新一次</li><li>继续输出开源社区，保持 GitHub 活跃；</li><li>读书；</li><li>技术积累(swift、逆向、flutter、html、算法相关的)</li></ul><p>  祝万事胜意，得偿所愿</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    作为程序员，到年底都会进行一次自我反思或者总结，回过头来看看这一年自    己成长了多少。&lt;/p&gt;
&lt;p&gt;​    18年忙忙碌碌的一年。4月份之前一直在出差，博客都没怎么更新导致今年的产出有点少8篇&lt;/p&gt;
&lt;p&gt;​    5~7月一段颓废期（生活方面导致）&lt;/
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://xuaninitial.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>error: Multiple commands produce及解决方法</title>
    <link href="http://xuaninitial.com/2018/10/19/error-Multiple-commands-produce%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://xuaninitial.com/2018/10/19/error-Multiple-commands-produce及解决方法/</id>
    <published>2018-10-19T07:57:04.000Z</published>
    <updated>2018-10-19T11:55:36.458Z</updated>
    
    <content type="html"><![CDATA[<img src="/2018/10/19/error-Multiple-commands-produce及解决方法/1.jpeg" alt="1.jpeg" title=""><p>错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">error: Multiple commands produce &apos;/Users/initial/Library/Developer/Xcode/DerivedData/Glaucus-cwggsmqkalmsxmhgdmywvbdfjqsz/Build/Products/Debug-iphoneos/Glaucus.app&apos;:</div><div class="line"></div><div class="line">1) Target &apos;Glaucus&apos; has create directory command with output &apos;/Users/initial/Library/Developer/Xcode/DerivedData/Glaucus-cwggsmqkalmsxmhgdmywvbdfjqsz/Build/Products/Debug-iphoneos/Glaucus.app&apos;</div><div class="line"></div><div class="line">2) That command depends on command in Target &apos;Glaucus&apos;: script phase “[CP] Copy Pods Resources”</div></pre></td></tr></table></figure><p>解决方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> 修改build system</div><div class="line"></div><div class="line">1、在Xcode菜单栏 -&gt; File -&gt; Workspace Setting，将build system修改为legacy build system，</div><div class="line">2、然后clean后编译。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2018/10/19/error-Multiple-commands-produce及解决方法/1.jpeg&quot; alt=&quot;1.jpeg&quot; title=&quot;&quot;&gt;
&lt;p&gt;错误&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="Question" scheme="http://xuaninitial.com/categories/Question/"/>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title> Container类型crash防护（Container）</title>
    <link href="http://xuaninitial.com/2018/08/25/Container%E7%B1%BB%E5%9E%8Bcrash%E9%98%B2%E6%8A%A4%EF%BC%88Container%EF%BC%89/"/>
    <id>http://xuaninitial.com/2018/08/25/Container类型crash防护（Container）/</id>
    <published>2018-08-25T12:51:31.000Z</published>
    <updated>2018-08-25T12:59:18.911Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Container crash 产生原因</strong></p><p>Container 类型的crash 指的是容器类的crash，常见的有NSArray／NSMutableArray／NSDictionary／NSMutableDictionary／NSCache的crash。 一些常见的越界，插入nil，等错误操作均会导致此类crash发生。 由于产生的原因比较简单，就不展开来描述了。</p><p>该类crash虽然比较容易排查，但是其在app crash概率总比还是挺高，所以有必要对其进行防护。</p><p><strong>Container crash 防护方案</strong></p><p>Container crash 类型的防护方案也比较简单，针对于NSArray／NSMutableArray／NSDictionary／NSMutableDictionary／NSCache的一些常用的会导致崩溃的API进行method swizzling，然后在swizzle的新方法中加入一些条件限制和判断，从而让这些API变的安全如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[self swizzlingInstance:objc_getClass(&quot;__NSPlaceholderDictionary&quot;) orginalMethod:@selector(initWithObjects:forKeys:count:) replaceMethod:NSSelectorFromString(@&quot;qiye_initWithObjects:forKeys:count:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSPlaceholderDictionary&quot;) orginalMethod:@selector(dictionaryWithObjects:forKeys:count:) replaceMethod:NSSelectorFromString(@&quot;qiye_dictionaryWithObjects:forKeys:count:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSDictionaryM&quot;) orginalMethod:@selector(setObject:forKey:) replaceMethod:NSSelectorFromString(@&quot;qiye_setObject:forKey:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSPlaceholderArray&quot;) orginalMethod:@selector(initWithObjects:count:) replaceMethod:NSSelectorFromString(@&quot;qiye_initWithObjects:count:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSArrayI&quot;) orginalMethod:@selector(objectAtIndex:) replaceMethod:NSSelectorFromString(@&quot;qiye_objectAtIndex:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSArrayM&quot;) orginalMethod:@selector(addObject:) replaceMethod:NSSelectorFromString(@&quot;qiye_addObject:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSArrayM&quot;) orginalMethod:@selector(insertObject:atIndex:) replaceMethod:NSSelectorFromString(@&quot;qiye_insertObject:atIndex:&quot;)];</div><div class="line">       </div><div class="line">       [self swizzlingInstance:objc_getClass(&quot;__NSArrayM&quot;) orginalMethod:@selector(objectAtIndex:) replaceMethod:NSSelectorFromString(@&quot;qiye_objectAtIndex:&quot;)];</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">+(BOOL)swizzlingInstance:(Class)clz orginalMethod:(SEL)originalSelector  replaceMethod:(SEL)replaceSelector&#123;</div><div class="line"></div><div class="line">    Method original = class_getInstanceMethod(clz, originalSelector);</div><div class="line">    Method replace = class_getInstanceMethod(clz, replaceSelector);</div><div class="line">    BOOL didAddMethod =</div><div class="line">    class_addMethod(clz,</div><div class="line">                    originalSelector,</div><div class="line">                    method_getImplementation(replace),</div><div class="line">                    method_getTypeEncoding(replace));</div><div class="line">    </div><div class="line">    if (didAddMethod) &#123;</div><div class="line">        class_replaceMethod(clz,</div><div class="line">                            replaceSelector,</div><div class="line">                            method_getImplementation(original),</div><div class="line">                            method_getTypeEncoding(original));</div><div class="line">    &#125; else &#123;</div><div class="line">        method_exchangeImplementations(original, replace);</div><div class="line">    &#125;</div><div class="line">    return YES;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Container crash 产生原因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Container 类型的crash 指的是容器类的crash，常见的有NSArray／NSMutableArray／NSDictionary／NSMutableDictionary／
      
    
    </summary>
    
      <category term="Crash" scheme="http://xuaninitial.com/categories/Crash/"/>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
      <category term="Crash" scheme="http://xuaninitial.com/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>Crash问题总结与防护--Key-Value-Observing(KVO)Crash</title>
    <link href="http://xuaninitial.com/2018/07/23/Crash%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E4%B8%8E%E9%98%B2%E6%8A%A4-Key-Value-Observing-KVO-Crash/"/>
    <id>http://xuaninitial.com/2018/07/23/Crash问题总结与防护-Key-Value-Observing-KVO-Crash/</id>
    <published>2018-07-23T10:01:17.000Z</published>
    <updated>2018-07-24T09:34:14.541Z</updated>
    
    <content type="html"><![CDATA[<p><strong>KVO介绍</strong></p><blockquote><p>KVO（Key-Value Observing),键值监听。它提供一种机制：指定的被观察者的属性被改变后，KVO就会通知观察者，观察者可以做出响应。</p><p>KVO作用：利用KVO，很容易实现视图组件和数据模型的分离。当数据模型的属性值改变之后，作为监听者的视图组件就会被激发。这有利于业务逻辑和视图展示的解耦合。</p><p>KVO使用步骤：（1）注册观察，添加观察者及属性；（2）实现回调方法；（3）移除观察。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//注册观察者</div><div class="line">- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//回调方法</div><div class="line">- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//移除观察者</div><div class="line">- (void)removeObserver:(NSObject *)anObserver forKeyPath:(NSString *)keyPath</div><div class="line">  - (void)removeObserver:(NSObject *)observer     forKeyPath:(NSString *)keyPath  context:(void *)context</div></pre></td></tr></table></figure><p><strong>产生原因</strong></p><p>（1）不能对不存在的属性进行kvo观测，否则会报Crash：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uncaught exception &apos;NSUnknownKeyException&apos;, reason: &apos;[&lt;SettingData 0x600000203d50&gt; setValue:forUndefinedKey:]: this class is not key value coding-compliant for the key stockName.&apos;</div></pre></td></tr></table></figure><p>（2）观察者必须实现 observeValueForKeyPath:ofObject:change:context:方法，否则Crash。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Terminating app due to uncaught exception &apos;NSInternalInconsistencyException&apos;, reason: &apos;&lt;SettingController: 0x7f811372ff70&gt;: An -observeValueForKeyPath:ofObject:change:context: message was received but not handled.</div></pre></td></tr></table></figure><p>(3) 移除观察，超过addObserver的次数就会 Crash：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Terminating app due to uncaught exception &apos;NSRangeException&apos;, reason: &apos;Cannot remove an observer &lt;SettingController 0x7ff8e8703100&gt; for the key path &quot;price&quot; from &lt;SettingData 0x60800003d000&gt; because it is not registered as an observer.&apos;</div></pre></td></tr></table></figure><p><strong>防护方案</strong></p><p>　可以让被观察对象持有一个KVO的delegate，所有和KVO相关的操作均通过delegate来进行管理，delegate通过建立一张map来维护KVO整个关系。</p><p>中间层delegate的代理工作：</p><p>（1）如果出现KVO重复添加观察者或者重复移除观察者（KVO注册观察者与移除观察者不匹配）的情况，delegate可以直接阻止这些非正常的操作。</p><p>（2）被观察者dealloc之前，可以通过delegate自动将与自己有关的KVO关系都注销掉，避免了KVO的被观察者dealloc时仍然注册着KVO导致的crash。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;KVO介绍&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;KVO（Key-Value Observing),键值监听。它提供一种机制：指定的被观察者的属性被改变后，KVO就会通知观察者，观察者可以做出响应。&lt;/p&gt;
&lt;p&gt;KVO作用：利用KVO，
      
    
    </summary>
    
      <category term="Crash" scheme="http://xuaninitial.com/categories/Crash/"/>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
      <category term="Crash" scheme="http://xuaninitial.com/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>Crash问题总结与防护--NSNotification Crash</title>
    <link href="http://xuaninitial.com/2018/07/23/Crash%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E4%B8%8E%E9%98%B2%E6%8A%A4-NSNotification-Crash/"/>
    <id>http://xuaninitial.com/2018/07/23/Crash问题总结与防护-NSNotification-Crash/</id>
    <published>2018-07-23T09:52:13.000Z</published>
    <updated>2018-07-24T09:35:00.400Z</updated>
    
    <content type="html"><![CDATA[<p><strong>产生原因</strong></p><p>注册观察者后，没有在观察者dealloc时及时注销观察者，极有可能通知中心再发送通知时发送给僵尸对象而发生Crash。（iOS9以后不会Crash）</p><p><strong>防护方案</strong></p><p>在宿主释放过程中嵌入我们自己的对象，使得宿主释放时顺带将我们的对象一起释放掉，从而获取dealloc的时机点</p><p><strong>实现</strong></p><blockquote><p>（1）创建一个NSObject的分类NSObject+AdNotifyEvent。在这个Category中，我们创建了添加观察者的方法，其具体实现由它的associate Object实现。这里的associate Object是类SLVObserverAssociater的对象。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">//  NSObject+AdNotifyEvent.h</div><div class="line"></div><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">#import &quot;SLVObserverAssociater.h&quot;</div><div class="line"></div><div class="line">@interface NSObject (AdNotifyEvent)</div><div class="line">- (void)slvWatchObject:(id)object eventName:(NSString *)event block:(SLVNotifyBlock)block;</div><div class="line">- (void)slvWatchObject:(id)object eventName:(NSString *)event level:(double)level block:(SLVNotifyBlock)block;</div><div class="line">@end</div><div class="line"></div><div class="line">//  NSObject+AdNotifyEvent.m</div><div class="line">#import &quot;NSObject+AdNotifyEvent.h&quot;</div><div class="line">#import &lt;objc/runtime.h&gt;</div><div class="line">#import &lt;objc/message.h&gt;</div><div class="line"></div><div class="line">@implementation NSObject (AdNotifyEvent)</div><div class="line">- (SLVObserverAssociater *)observerAssociater</div><div class="line">&#123;</div><div class="line">    SLVObserverAssociater *observerAssociater = (SLVObserverAssociater *)objc_getAssociatedObject(self, _cmd);</div><div class="line">    if (observerAssociater == nil) &#123;</div><div class="line">        observerAssociater = [[SLVObserverAssociater alloc] initWithObserverObject:self];</div><div class="line">        objc_setAssociatedObject(self, _cmd, observerAssociater, OBJC_ASSOCIATION_RETAIN_NONATOMIC);</div><div class="line">    &#125;</div><div class="line">    return observerAssociater;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)slvWatchObject:(id)object eventName:(NSString *)event block:(SLVNotifyBlock)block</div><div class="line">&#123;</div><div class="line">    [[self observerAssociater] addNotifyEvent:event watchObject:object observerObject:self level:RFEventLevelDefault block:block];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)slvWatchObject:(id)object eventName:(NSString *)event level:(double)level block:(SLVNotifyBlock)block</div><div class="line">&#123;</div><div class="line">    [[self observerAssociater] addNotifyEvent:event watchObject:object observerObject:self level:level block:block];</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure><blockquote><p>（2）SLVObserverAssociater的实现</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">//  SLVObserverAssociater.h</div><div class="line"></div><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">#import &quot;SLVNotifyLevelBlocks.h&quot;</div><div class="line"></div><div class="line">@interface SLVObserverAssociater : NSObject</div><div class="line"></div><div class="line">@property (nonatomic, weak) id observerObject;                    // selfRef,观察者</div><div class="line">@property (nonatomic, strong) NSMutableDictionary *notifyMap;    // key:通知名_watchObject value:RFNotifyEventObject</div><div class="line"></div><div class="line">- (id)initWithObserverObject:(id)observerObject;</div><div class="line"></div><div class="line">- (void)addNotifyEvent:(NSString *)event</div><div class="line">           watchObject:(id)watchObject</div><div class="line">        observerObject:(id)observerObject</div><div class="line">                 level:(double)level</div><div class="line">                 block:(SLVNotifyBlock)block;</div><div class="line">@end</div><div class="line"></div><div class="line"></div><div class="line">@interface SLVNotifyInfo : NSObject</div><div class="line"></div><div class="line">@property (nonatomic, weak) SLVObserverAssociater *associater;</div><div class="line">@property (nonatomic, unsafe_unretained) id watchObject;                // 被观察对象</div><div class="line">@property (nonatomic, strong) NSString *event;</div><div class="line">@property (nonatomic, strong) NSMutableArray *eventInfos;</div><div class="line">@property (nonatomic, weak) id sysObserverObj;                          // 观察者</div><div class="line"></div><div class="line">- (id)initWithRFEvent:(SLVObserverAssociater *)rfEvent event:(NSString *)event watchObject:(id)watchObject;</div><div class="line">- (void)add:(SLVNotifyLevelBlocks *)info;</div><div class="line">- (void)removeLevel:(double)level;</div><div class="line">- (void)handleRFEventBlockCallback:(NSNotification *)note;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure><blockquote><p>.m</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">//  SLVObserverAssociater.h</div><div class="line"></div><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">#import &quot;SLVNotifyLevelBlocks.h&quot;</div><div class="line"></div><div class="line">@interface SLVObserverAssociater : NSObject</div><div class="line"></div><div class="line">@property (nonatomic, weak) id observerObject;                    // selfRef,观察者</div><div class="line">@property (nonatomic, strong) NSMutableDictionary *notifyMap;    // key:通知名_watchObject value:RFNotifyEventObject</div><div class="line"></div><div class="line">- (id)initWithObserverObject:(id)observerObject;</div><div class="line"></div><div class="line">- (void)addNotifyEvent:(NSString *)event</div><div class="line">           watchObject:(id)watchObject</div><div class="line">        observerObject:(id)observerObject</div><div class="line">                 level:(double)level</div><div class="line">                 block:(SLVNotifyBlock)block;</div><div class="line">@end</div><div class="line"></div><div class="line"></div><div class="line">@interface SLVNotifyInfo : NSObject</div><div class="line"></div><div class="line">@property (nonatomic, weak) SLVObserverAssociater *associater;</div><div class="line">@property (nonatomic, unsafe_unretained) id watchObject;                // 被观察对象</div><div class="line">@property (nonatomic, strong) NSString *event;</div><div class="line">@property (nonatomic, strong) NSMutableArray *eventInfos;</div><div class="line">@property (nonatomic, weak) id sysObserverObj;                          // 观察者</div><div class="line"></div><div class="line">- (id)initWithRFEvent:(SLVObserverAssociater *)rfEvent event:(NSString *)event watchObject:(id)watchObject;</div><div class="line">- (void)add:(SLVNotifyLevelBlocks *)info;</div><div class="line">- (void)removeLevel:(double)level;</div><div class="line">- (void)handleRFEventBlockCallback:(NSNotification *)note;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure><blockquote><p>(3)为通知的回调block排了优先级</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#define RFEventLevelDefault                        1000.0f</div><div class="line">typedef void (^SLVNotifyBlock) (NSNotification *note, id selfRef);</div><div class="line"></div><div class="line">@interface SLVNotifyLevelBlocks : NSObject</div><div class="line">@property (nonatomic, assign) double level;         // block的优先级</div><div class="line">@property (nonatomic, copy) SLVNotifyBlock block;   //收到通知后的回调block</div><div class="line">@end</div></pre></td></tr></table></figure><blockquote><p>(4)test</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (void)viewDidLoad &#123;</div><div class="line">    [super viewDidLoad];</div><div class="line">    [self slvWatchObject:nil eventName:@&quot;newNotification&quot; block:^(NSNotification *aNotification, id weakSelf)&#123;</div><div class="line">        NSLog(@&quot;收到一个通知,现在开始处理了。。。&quot;);</div><div class="line">    &#125; ];</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;产生原因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注册观察者后，没有在观察者dealloc时及时注销观察者，极有可能通知中心再发送通知时发送给僵尸对象而发生Crash。（iOS9以后不会Crash）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防护方案&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Crash" scheme="http://xuaninitial.com/categories/Crash/"/>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
      <category term="Crash" scheme="http://xuaninitial.com/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>Crash问题总结与防护--unrecognized selector crash</title>
    <link href="http://xuaninitial.com/2018/07/23/Crash%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E4%B8%8E%E9%98%B2%E6%8A%A4-unrecognized-selector-crash/"/>
    <id>http://xuaninitial.com/2018/07/23/Crash问题总结与防护-unrecognized-selector-crash/</id>
    <published>2018-07-23T09:34:21.000Z</published>
    <updated>2018-07-24T09:35:23.056Z</updated>
    
    <content type="html"><![CDATA[<p><strong>产生原因</strong></p><p>​    因为一个对象调用了一个不属于它方法的方法导致的。</p><blockquote><p>eg:UIButton 添加了点击事件没有实现</p></blockquote><p>   方法调用在运行时的过程如下：</p><ol><li>首先，在相应操作的对象中的缓存方法列表中找调用的方法，如果找到，转向相应实现并执行。</li><li>如果没找到，在相应操作的对象中的方法列表中找调用的方法，如果找到，转向相应实现执行</li><li>如果没找到，去父类指针所指向的对象中执行1，2.</li><li>以此类推，如果一直到根类还没找到，转向拦截调用，走消息转发机制。</li><li>如果没有重写拦截调用的方法，程序报错。</li></ol><p><strong>拦截调用</strong></p><p>​      拦截调用就是，在找不到调用的方法程序崩溃之前，你有机会通过重写 NSObject的四个方法来处理:</p><img src="/2018/07/23/Crash问题总结与防护-unrecognized-selector-crash/NSObject.png" alt="NSObject.png" title=""><ol><li>调用resolveInstanceMethod给个机会让类添加这个实现这个函数</li><li>调用forwardingTargetForSelector让别的对象去执行这个函数</li><li>调用forwardInvocation（函数执行器）灵活的将目标函数以其他形式执行。</li></ol><p><strong>防护方案</strong></p><p>​     选择了第二步forwardingTargetForSelector来做文章。原因如下：</p><ol><li><p>resolveInstanceMethod需要在类的本身上动态添加它本身不存在的方法，这些方法对于该类本身来说冗余的</p></li><li><p>forwardInvocation可以通过NSInvocation的形式将消息转发给多个对象，但是其开销较大，需要创建新的NSInvocation对象，并且forwardInvocation的函数经常被使用者调用，来做多层消息转发选择机制，不适合多次重写</p></li><li><p>forwardingTargetForSelector可以将消息转发给一个对象，开销较小，并且被重写的概率较低，适合重写</p></li></ol><p><strong>消息转发机制里的三个步骤处理未知选择，步骤越往后，处理消息的代价就        越大。但是步骤越往前，我们越有可能拦截到系统的本来能处理的方法。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;产生原因&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    因为一个对象调用了一个不属于它方法的方法导致的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eg:UIButton 添加了点击事件没有实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;   方法调用在运行时的过
      
    
    </summary>
    
      <category term="Crash" scheme="http://xuaninitial.com/categories/Crash/"/>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
      <category term="Crash" scheme="http://xuaninitial.com/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>NSURLSession请求  加gb2312编码</title>
    <link href="http://xuaninitial.com/2018/05/03/NSURLSession%E8%AF%B7%E6%B1%82-%E5%8A%A0gb2312%E7%BC%96%E7%A0%81/"/>
    <id>http://xuaninitial.com/2018/05/03/NSURLSession请求-加gb2312编码/</id>
    <published>2018-05-03T07:53:39.000Z</published>
    <updated>2018-05-03T08:19:11.601Z</updated>
    
    <content type="html"><![CDATA[<p>需求是：请求的时候参数是汉字的进行gb2312编码，</p><p>最开始用的AF，AF默认是UTF-8编码</p><p>通过修改编码格式不行， AF最后提交的时候会进行2次编码，</p><img src="/2018/05/03/NSURLSession请求-加gb2312编码/1.jpg" alt="1.jpg" title=""><img src="/2018/05/03/NSURLSession请求-加gb2312编码/2.jpg" alt="2.jpg" title=""><p>最后用原生写解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">NSStringEncoding encGbk = CFStringConvertEncodingToNSStringEncoding(kCFStringEncodingGB_18030_2000);</div><div class="line"></div><div class="line">  //  NSString *retStr =name;</div><div class="line">    NSString *retStr =  [name stringByAddingPercentEscapesUsingEncoding:encGbk];</div><div class="line"></div><div class="line">    NSString * urls = @&quot;&quot;;//地址</div><div class="line">//    NSDictionary * dic = @&#123;</div><div class="line">//                           @&quot;id_card&quot;:id_card,</div><div class="line">//                           @&quot;name&quot;:retStr,</div><div class="line">//                           @&quot;valCode&quot;:valCode,</div><div class="line">//                           @&quot;certificate_code&quot;:@&quot;&quot;,</div><div class="line">//                           @&quot;evelop_code&quot;:@&quot;&quot;</div><div class="line">//                           &#125;;</div><div class="line">    </div><div class="line">    //certificate_code=&amp;evelop_code=&amp;id_card=&amp;name=%E5%90%95%E6%85%A7%E5%BC%BA&amp;valCode=4174</div><div class="line">    </div><div class="line">    NSString *body= [NSString stringWithFormat:@&quot;certificate_code=%@&amp;evelop_code=%@&amp;id_card=%@&amp;name=%@&amp;valCode=%@&quot;,@&quot;&quot;,@&quot;&quot;,id_card,retStr,valCode];</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line"></div><div class="line">    NSURLSession *session=[NSURLSession sharedSession];</div><div class="line">    </div><div class="line"></div><div class="line">    NSURL *url=[NSURL URLWithString:urls];</div><div class="line"> </div><div class="line">    NSMutableURLRequest *request=[NSMutableURLRequest requestWithURL:url];</div><div class="line">    [request setHTTPMethod:@&quot;POST&quot;];</div><div class="line">    </div><div class="line">    [request setValue:@&quot;application/x-www-form-urlencoded;charset=gb2312&quot; forHTTPHeaderField:@&quot;Content-Type&quot;];</div><div class="line">    </div><div class="line">    request.timeoutInterval = 180;</div><div class="line">    [request setValue:@&quot;iir.circ.gov.cn&quot; forHTTPHeaderField:@&quot;Host&quot;];</div><div class="line">    [request setValue:@&quot;keep-alive&quot; forHTTPHeaderField:@&quot;Connection&quot;];</div><div class="line">    [request setValue:@&quot;gzip,deflate&quot; forHTTPHeaderField:@&quot;Accept-Encoding&quot;];</div><div class="line">    [request setValue:@&quot;zh-CN,zh;q=0.8&quot; forHTTPHeaderField:@&quot;Accept-Language&quot;];</div><div class="line">    [request setValue:@&quot;&quot; forHTTPHeaderField:@&quot;Origin&quot;];//</div><div class="line">    [request setValue:@&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)&quot; forHTTPHeaderField:@&quot;User-Agent&quot;];</div><div class="line">    [request setValue:@&quot;&quot; forHTTPHeaderField:@&quot;Referer&quot;];//</div><div class="line">    NSString * cookie =  [[NSUserDefaults standardUserDefaults] valueForKey:@&quot;cookie&quot;];</div><div class="line">    NSLog(@&quot;***********************cookie为 %@ *************************&quot;,cookie);</div><div class="line">    [request setValue:cookie forHTTPHeaderField:@&quot;Cookie&quot;];</div><div class="line">   </div><div class="line"></div><div class="line">    [request setValue:@&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot; forHTTPHeaderField:@&quot;Accept&quot;];</div><div class="line">    </div><div class="line">   // request.acceptableContentTypes =  [NSSet setWithObjects:@&quot;application/json&quot;, @&quot;text/json&quot;, @&quot;text/javascript&quot;, @&quot;text/html&quot;, @&quot;text/css&quot;, @&quot;text/xml&quot;, @&quot;text/plain&quot;, @&quot;application/javascript&quot;, @&quot;image/*&quot;,@&quot;application/json&quot;, nil];</div><div class="line">    </div><div class="line"></div><div class="line">    </div><div class="line">   // request.HTTPBody = [[dic mj_JSONString] dataUsingEncoding:encGbk];</div><div class="line">    </div><div class="line">     request.HTTPBody = [body dataUsingEncoding:encGbk];</div><div class="line"></div><div class="line">    NSString *str = [[NSString alloc] initWithData:request.HTTPBody encoding:encGbk];</div><div class="line">    </div><div class="line">    NSLog(@&quot; ***********************请求参数***********************%@&quot;,str);</div><div class="line">    </div><div class="line">    NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error)&#123;</div><div class="line">        </div><div class="line">        </div><div class="line">        if (error ==nil) &#123;</div><div class="line">            NSString *str = [[NSString alloc] initWithData:data encoding:CFStringConvertEncodingToNSStringEncoding(kCFStringEncodingGB_18030_2000)];</div><div class="line">            </div><div class="line">            VMLog(@&quot; ***********************请求成功***********************%@---------------error===%@&quot;,str,error);</div><div class="line">            </div><div class="line">        &#125;else&#123;</div><div class="line">            </div><div class="line">            VMLog(@&quot;%@&quot;,error);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //7.执行任务</div><div class="line">    [dataTask resume];</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需求是：请求的时候参数是汉字的进行gb2312编码，&lt;/p&gt;
&lt;p&gt;最开始用的AF，AF默认是UTF-8编码&lt;/p&gt;
&lt;p&gt;通过修改编码格式不行， AF最后提交的时候会进行2次编码，&lt;/p&gt;
&lt;img src=&quot;/2018/05/03/NSURLSession请求-加gb2
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>配置Hikari中文文档</title>
    <link href="http://xuaninitial.com/2018/01/18/%E9%85%8D%E7%BD%AEHikari%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/"/>
    <id>http://xuaninitial.com/2018/01/18/配置Hikari中文文档/</id>
    <published>2018-01-18T09:49:30.000Z</published>
    <updated>2018-01-20T06:59:09.266Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://iosre.com/t/hikari/10802" target="_blank" rel="external">本篇文章迁移到iosre</a></p><p>参考：</p><p><a href="http://llvm.org/docs/GettingStarted.html#getting-started-quickly-a-summary" target="_blank" rel="external">LLVM系统入门</a></p><p><a href="https://github.com/Naville/Hikari/wiki" target="_blank" rel="external"><strong>Hikari</strong>  wiki</a></p><p><a href="https://ninja-build.org/" target="_blank" rel="external">Ninja</a></p><p><a href="http://xuaninitial.com/2017/11/24/Homebrew/">Homebrew</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://iosre.com/t/hikari/10802&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本篇文章迁移到iosre&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://llvm.org/docs
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>使用itms-services 协议来安装App</title>
    <link href="http://xuaninitial.com/2018/01/08/%E4%BD%BF%E7%94%A8itms-services-%E5%8D%8F%E8%AE%AE%E6%9D%A5%E5%AE%89%E8%A3%85App/"/>
    <id>http://xuaninitial.com/2018/01/08/使用itms-services-协议来安装App/</id>
    <published>2018-01-08T08:12:30.000Z</published>
    <updated>2018-01-08T08:20:52.108Z</updated>
    
    <content type="html"><![CDATA[<p>苹果允许用<a href="https://github.com/xuanInitial/node-itms-services" target="_blank" rel="external">itms-services</a>协议来直接在iphone/ipad上安装应用程序,创建安装流程如下：</p><p>1、打包一个ad_hoc ipa文件，</p><p>2、配置一个plist文件，plist文件配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</div><div class="line">&lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">   &lt;key&gt;items&lt;/key&gt;</div><div class="line">   &lt;array&gt;</div><div class="line">       &lt;dict&gt;</div><div class="line">           &lt;key&gt;assets&lt;/key&gt;</div><div class="line">           &lt;array&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;software-package&lt;/string&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;https://****/**/tue_test.ipa(ipa文件的访问地址)&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">               &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;display-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;图片的地址&lt;/string&gt;</div><div class="line">               &lt;/dict&gt;</div><div class="line">      &lt;dict&gt;</div><div class="line">                   &lt;key&gt;kind&lt;/key&gt;</div><div class="line">                   &lt;string&gt;full-size-image&lt;/string&gt;</div><div class="line">                   &lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">                   &lt;true/&gt;</div><div class="line">                   &lt;key&gt;url&lt;/key&gt;</div><div class="line">                   &lt;string&gt;图片的地址&lt;/string&gt;</div><div class="line">              &lt;/dict&gt;</div><div class="line">           &lt;/array&gt;</div><div class="line">           &lt;key&gt;metadata&lt;/key&gt;</div><div class="line">           &lt;dict&gt;</div><div class="line">               &lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class="line">               &lt;string&gt;com.xx.xx(bundleID需要ipa中需要保持一致)&lt;/string&gt;</div><div class="line">               &lt;key&gt;bundle-version&lt;/key&gt;</div><div class="line">               &lt;string&gt;1.0(CFBundleVersion需要和ipa中的保持一致)&lt;/string&gt;</div><div class="line">               &lt;key&gt;kind&lt;/key&gt;</div><div class="line">               &lt;string&gt;software&lt;/string&gt;</div><div class="line">               &lt;key&gt;subtitle&lt;/key&gt;</div><div class="line">               &lt;string&gt;&lt;/string&gt;</div><div class="line">               &lt;key&gt;title&lt;/key&gt;</div><div class="line">               &lt;string&gt;提示&lt;/string&gt;</div><div class="line">           &lt;/dict&gt;</div><div class="line">       &lt;/dict&gt;</div><div class="line">   &lt;/array&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div></pre></td></tr></table></figure><p>3、保存app.plist文件并将其上传到<strong>HTTPS</strong>的Web服务器。</p><p>4、创建一个连接给用户下载</p><blockquote><p><strong>重要信息</strong></p><p>链接如下： <em>itms-services：//？action = download-manifest＆amp; url = 链接。</em> 将<strong>链接</strong> 替换为位于Web服务器上的app.plist文件的URL。</p></blockquote><p>5、生成二维码下载</p><p><a href="https://github.com/xuanInitial/UrlDownModel" target="_blank" rel="external">下载模板</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;苹果允许用&lt;a href=&quot;https://github.com/xuanInitial/node-itms-services&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itms-services&lt;/a&gt;协议来直接在iphone/ipad上安装应用程序
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>2017年终总结</title>
    <link href="http://xuaninitial.com/2017/12/31/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://xuaninitial.com/2017/12/31/2017年终总结/</id>
    <published>2017-12-31T15:45:36.000Z</published>
    <updated>2017-12-31T15:49:42.120Z</updated>
    
    <content type="html"><![CDATA[<p>年终了总想着要写点什么东西，又不知道从何写起，想到哪里写到哪里吧</p><p>先说工作吧，入坑三年，这边公司也满一年了，忙忙碌碌的一年</p><p>这一年看了很多书 凡人开始仙界篇了 算是10年的一个开始，也算是青春的结束 辰一更也开始新的征程了</p><p>小黄书断断续续的看了3分子1吧 明年继续 </p><p>非虫大佬的逆向分析倒是读了一半</p><p>代码之外的生存指南 读完了想写点东西一直没写</p><p>小王子  一本伤心的童话故事</p><p>swift 1~4一直没系统的学习 写过一些东西 在用 还需要学习</p><p>Android、h5、css 稍有涉猎</p><p>自己的时间比较少吧 游戏玩的少了，学习的时间有点不足，旅游什么的就不说了，18年希望可以拿出更多属于自己的时间吧</p><p>18岁的结束 90后的时代结束了  18年加油祝自己好运</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;年终了总想着要写点什么东西，又不知道从何写起，想到哪里写到哪里吧&lt;/p&gt;
&lt;p&gt;先说工作吧，入坑三年，这边公司也满一年了，忙忙碌碌的一年&lt;/p&gt;
&lt;p&gt;这一年看了很多书 凡人开始仙界篇了 算是10年的一个开始，也算是青春的结束 辰一更也开始新的征程了&lt;/p&gt;
&lt;p&gt;小黄书断
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://xuaninitial.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>逆向学习笔记_1</title>
    <link href="http://xuaninitial.com/2017/11/24/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://xuaninitial.com/2017/11/24/逆向学习笔记-1/</id>
    <published>2017-11-24T04:02:43.000Z</published>
    <updated>2017-11-24T04:04:03.943Z</updated>
    
    <content type="html"><![CDATA[<p><strong>main</strong>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">__attribute__((constructor)) static void entry() &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>等价于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#define CHConstructor static __attribute__((constructor)) void CHConcat(CHConstructor, __LINE__)()</div></pre></td></tr></table></figure><p>通过view的nextResponder方法，可以找出它所属的视图控制器ViewController</p><ul><li>内存地址＝进程内存基地址＋函数在二进制中的偏移量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">br s -a &apos;0X00000000000E800+0x00000001017d7c6c&apos;</div></pre></td></tr></table></figure><ul><li>函数在二进制中的偏移量＝内存地址 - 进程内存基地址</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;main&lt;/strong&gt;函数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="iOSRE" scheme="http://xuaninitial.com/tags/iOSRE/"/>
    
  </entry>
  
  <entry>
    <title>UITableView卡顿问题处理</title>
    <link href="http://xuaninitial.com/2017/11/24/UITableView%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <id>http://xuaninitial.com/2017/11/24/UITableView卡顿问题处理/</id>
    <published>2017-11-24T03:58:10.000Z</published>
    <updated>2017-11-24T03:59:20.753Z</updated>
    
    <content type="html"><![CDATA[<p>1、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;</div></pre></td></tr></table></figure><p>这个代理方法每次滑动都会调用 建议不要在里面做耗时操作</p><p>eg:重新计算高度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CGSize strSize = [str boundingRectWithSize:CGSizeMake(BHSCREEN_W - 32, MAXFLOAT) options:NSStringDrawingUsesLineFragmentOrigin attributes:@&#123;NSFontAttributeName:BH14Font&#125; context:nil].size;</div><div class="line">   return strSize.height+10;</div></pre></td></tr></table></figure><p>2、富文本串AttributeString的绘制也很耗时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">NSMutableAttributedString *AttributedStr = [[NSMutableAttributedString alloc]initWithString:str];</div><div class="line">           [AttributedStr addAttribute:NSFontAttributeName</div><div class="line"></div><div class="line">                                 value:[UIFont systemFontOfSize:16.0]</div><div class="line"></div><div class="line">                                 range:NSMakeRange(5, str.length-5)];</div><div class="line"></div><div class="line">           [AttributedStr addAttribute:NSForegroundColorAttributeName</div><div class="line"></div><div class="line">                                 value:[UIColor redColor]</div><div class="line"></div><div class="line">                                 range:NSMakeRange(5, str.length-5)];</div><div class="line"></div><div class="line">           _AmountPayableLabel.attributedText = AttributedStr;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div 
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>NSInteger32位64位问题</title>
    <link href="http://xuaninitial.com/2017/11/24/NSInteger32%E4%BD%8D64%E4%BD%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://xuaninitial.com/2017/11/24/NSInteger32位64位问题/</id>
    <published>2017-11-24T03:55:55.000Z</published>
    <updated>2017-11-24T03:57:25.526Z</updated>
    
    <content type="html"><![CDATA[<p>64bit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">orderNum = 1150815970118744;</div></pre></td></tr></table></figure><p>32bit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(lldb) po model.orderNum</div><div class="line">-1714505370</div><div class="line"></div><div class="line">(lldb)</div></pre></td></tr></table></figure><p>解决方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@property (nonatomic,copy) NSString * orderNum;</div></pre></td></tr></table></figure><p>原因：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#if __LP64__ || (TARGET_OS_EMBEDDED &amp;&amp; !TARGET_OS_IPHONE) || TARGET_OS_WIN32 || NS_BUILD_32_LIKE_64</div><div class="line">typedef long NSInteger;</div><div class="line">typedef unsigned long NSUInteger;</div><div class="line">#else</div><div class="line">typedef int NSInteger;</div><div class="line">typedef unsigned int NSUInteger;</div><div class="line">#endif</div></pre></td></tr></table></figure><p>NSInteger在32位时等同于int，在64位时等同于long</p><p>32bit下：</p><p>unsigned int 0～4294967295  </p><p>int -2147483648～2147483647 </p><p>long long的最大值：9223372036854775807<br>long long的最小值：-9223372036854775808</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;64bit&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;d
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew</title>
    <link href="http://xuaninitial.com/2017/11/24/Homebrew/"/>
    <id>http://xuaninitial.com/2017/11/24/Homebrew/</id>
    <published>2017-11-24T03:51:08.000Z</published>
    <updated>2017-11-24T03:53:05.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a><a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a></h1><p><a href="https://github.com/GoSSIP-SJTU/Armariris" target="_blank" rel="external">LLVM混淆框架</a></p><p>删除brew   </p><p>brew  cleanup</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Homebrew&quot;&gt;&lt;a href=&quot;#Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Homebrew&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Home
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>iTerm2配色</title>
    <link href="http://xuaninitial.com/2017/11/15/iTerm2%E9%85%8D%E8%89%B2/"/>
    <id>http://xuaninitial.com/2017/11/15/iTerm2配色/</id>
    <published>2017-11-15T12:46:24.000Z</published>
    <updated>2017-11-15T12:47:51.484Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.iterm2.com/downloads.html" target="_blank" rel="external">iTerm2下载</a></p><p>在系统的终端下运行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># clone</div><div class="line">git clone https://github.com/powerline/fonts.git --depth=1</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># install</div><div class="line">cd fonts</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./install.sh</div></pre></td></tr></table></figure><p>然后再运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo easy_install pip</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install powerline-status</div></pre></td></tr></table></figure><p>最后重启iTerm2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.iterm2.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTerm2下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在系统的终端下运行以下命令&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Permission denied (publickey)</title>
    <link href="http://xuaninitial.com/2017/09/25/Permission-denied-publickey/"/>
    <id>http://xuaninitial.com/2017/09/25/Permission-denied-publickey/</id>
    <published>2017-09-25T07:22:52.000Z</published>
    <updated>2017-11-15T12:53:25.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssh准备连接远程服务器却遭提示”Permission-denied-publickey-”"><a href="#ssh准备连接远程服务器却遭提示”Permission-denied-publickey-”" class="headerlink" title="ssh准备连接远程服务器却遭提示”Permission denied (publickey)”"></a>ssh准备连接远程服务器却遭提示”Permission denied (publickey)”</h2><p>1、首先确认有没有公钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls</div></pre></td></tr></table></figure><p>看有没有文件</p><p>2、如没有则按下述方法生成： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa</div></pre></td></tr></table></figure><p>一路回车…… </p><p>最后，输入验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure><p>确认OK即可。</p><p>再尝试输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p>3、github账号设置ssh公钥信息</p><p>依次点击”Setting -&gt; SSH Keys”-&gt;”New SSH key” 添加</p><p>Title处随便写</p><p> key拷贝<code>cat ~/.ssh/id_rsa.pub</code> 打印的字符串</p><p>4、如果以上方法都做了还是提示<code>Permission denied (publickey)</code></p><p>那就是苹果抽风了执行下面操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add  id_rsa</div></pre></td></tr></table></figure><p><strong>id_rsa 你的公钥</strong></p><p>5、如果还是不行 欢迎联系我一起讨论</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ssh准备连接远程服务器却遭提示”Permission-denied-publickey-”&quot;&gt;&lt;a href=&quot;#ssh准备连接远程服务器却遭提示”Permission-denied-publickey-”&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Charles抓HTTPS包</title>
    <link href="http://xuaninitial.com/2017/09/25/Charles%E6%8A%93HTTPS%E5%8C%85/"/>
    <id>http://xuaninitial.com/2017/09/25/Charles抓HTTPS包/</id>
    <published>2017-09-25T06:50:21.000Z</published>
    <updated>2017-09-25T06:59:01.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>首先打开Charles菜单，选择安装Charles证书到移动设备</li></ul><img src="/2017/09/25/Charles抓HTTPS包/1.png" alt="1.png" title=""><p>一路OK</p><ul><li><p>手机上用Safari  打开 <a href="[http://charlesproxy.com/getssl]">网址</a>  然后信任  手机设置—&gt;通用—&gt;你添加的证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://charlesproxy.com/getssl</div></pre></td></tr></table></figure></li><li><p>选择Proxy-SSL Proxying Settings，设置启用SSL代理能力，并自行Add需要抓取的服务地址</p></li></ul><img src="/2017/09/25/Charles抓HTTPS包/2.png" alt="2.png" title=""><img src="/2017/09/25/Charles抓HTTPS包/3.png" alt="3.png" title="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;首先打开Charles菜单，选择安装Charles证书到移动设备&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2017/09/25/Charles抓HTTPS包/1.png&quot; alt=&quot;1.png&quot; title=&quot;&quot;&gt;
&lt;p&gt;一路OK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="tools" scheme="http://xuaninitial.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>iOS11适配问题总结</title>
    <link href="http://xuaninitial.com/2017/09/21/iOS11%E9%80%82%E9%85%8D%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://xuaninitial.com/2017/09/21/iOS11适配问题总结/</id>
    <published>2017-09-21T05:28:11.000Z</published>
    <updated>2017-11-15T12:45:45.328Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、tableview-留空"><a href="#一、tableview-留空" class="headerlink" title="一、tableview 留空"></a>一、tableview 留空</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">- (instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style&#123;</div><div class="line"></div><div class="line">    self = [super initWithFrame:frame style:style];</div><div class="line"></div><div class="line">    if (self) &#123;</div><div class="line"></div><div class="line">        self.estimatedRowHeight = 0;</div><div class="line"></div><div class="line">        self.estimatedSectionHeaderHeight = 0;</div><div class="line"></div><div class="line">        self.estimatedSectionFooterHeight = 0;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return self;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="二、导航栏返回按钮"><a href="#二、导航栏返回按钮" class="headerlink" title="二、导航栏返回按钮"></a>二、导航栏返回按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">UIImage *backButtonImage = [[UIImage imageNamed:@&quot;arrow_back_gray&quot;] resizableImageWithCapInsets:UIEdgeInsetsMake(0, 30, 0, 0)</div><div class="line">                                                                                      resizingMode:UIImageResizingModeTile];</div><div class="line">   [[UIBarButtonItem appearance] setBackButtonBackgroundImage:backButtonImage</div><div class="line">                                                     forState:UIControlStateNormal</div><div class="line">                                                   barMetrics:UIBarMetricsDefault];</div><div class="line">   </div><div class="line">   self.navigationController.navigationBar.backIndicatorImage = [UIImage imageNamed:@&quot;arrow_back_gray&quot;];</div><div class="line">   self.navigationController.navigationBar.backIndicatorTransitionMaskImage = [UIImage imageNamed:@&quot;arrow_back_gray&quot;];</div></pre></td></tr></table></figure><h4 id="三、判断11"><a href="#三、判断11" class="headerlink" title="三、判断11"></a>三、判断11</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if (@available(iOS 11.0, *)) &#123;</div><div class="line"></div><div class="line">    &#125; else &#123;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#if __IPHONE_OS_VERSION_MAX_ALLOWED &gt;= __IPHONE_11_0</div><div class="line"></div><div class="line">#eles</div><div class="line"></div><div class="line">#endif</div></pre></td></tr></table></figure><h4 id="四、键盘默认大写不起作用-（待解决）"><a href="#四、键盘默认大写不起作用-（待解决）" class="headerlink" title="四、键盘默认大写不起作用 （待解决）"></a>四、键盘默认大写不起作用 （待解决）</h4><p>   _carTextField.autocapitalizationType=UITextAutocapitalizationTypeAllCharacters;//所有字母大写</p><h4 id="五、左滑删除崩溃问题"><a href="#五、左滑删除崩溃问题" class="headerlink" title="五、左滑删除崩溃问题"></a>五、左滑删除崩溃问题</h4><p>使用 <a href="https://github.com/MortimerGoro/MGSwipeTableCell" target="_blank" rel="external">MGSwipeTableCell</a></p><p>你的cell 继承MGSwipeTableCell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cell.delegate = self;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">#pragma mark Swipe Delegate</div><div class="line"></div><div class="line">-(BOOL) swipeTableCell:(MGSwipeTableCell*) cell canSwipe:(MGSwipeDirection) direction;</div><div class="line">&#123;</div><div class="line">    return YES;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(NSArray*) swipeTableCell:(MGSwipeTableCell*) cell swipeButtonsForDirection:(MGSwipeDirection)direction</div><div class="line">             swipeSettings:(MGSwipeSettings*) swipeSettings expansionSettings:(MGSwipeExpansionSettings*) expansionSettings</div><div class="line">&#123;</div><div class="line"></div><div class="line">    swipeSettings.transition = MGSwipeTransitionBorder;</div><div class="line">    expansionSettings.buttonIndex = 0;</div><div class="line"></div><div class="line">    __weak BHAllMessageVC * me = self;</div><div class="line"></div><div class="line"></div><div class="line">    BHMessageModel *model =  [me mailForIndexPath:[self.allMessageTableView indexPathForCell:cell]];</div><div class="line"></div><div class="line">     if (direction == MGSwipeDirectionLeftToRight) &#123;</div><div class="line">         return nil;</div><div class="line">     &#125;else&#123;</div><div class="line">         expansionSettings.fillOnTrigger = YES;</div><div class="line">         expansionSettings.threshold = 1.1;</div><div class="line"></div><div class="line">         CGFloat padding = 15;</div><div class="line"></div><div class="line">         MGSwipeButton * trash = [MGSwipeButton buttonWithTitle:@&quot;删除&quot; backgroundColor:[UIColor colorWithRed:1.0 green:59/255.0 blue:50/255.0 alpha:1.0] padding:padding callback:^BOOL(MGSwipeTableCell *sender) &#123;</div><div class="line"></div><div class="line">             NSIndexPath * indexPath = [me.allMessageTableView indexPathForCell:sender];</div><div class="line">             [me deleteMail:indexPath addModel:model];</div><div class="line">              [cell hideSwipeAnimated:YES];</div><div class="line">             return NO; //don&apos;t autohide to improve delete animation</div><div class="line">         &#125;];</div><div class="line"></div><div class="line">         return @[trash];</div><div class="line">     &#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">-(BHMessageModel *) mailForIndexPath:(NSIndexPath*) path</div><div class="line">&#123;</div><div class="line">    return [self.allMessageData objectAtIndex:path.section];</div><div class="line">&#125;</div><div class="line">-(void) deleteMail:(NSIndexPath *) indexPath addModel:(BHMessageModel*)model</div><div class="line">&#123;</div><div class="line">    [self.allMessageData removeObjectAtIndex:indexPath.section];</div><div class="line">    [self.allMessageTableView deleteSections:[NSIndexSet indexSetWithIndex:indexPath.section] withRowAnimation:UITableViewRowAnimationNone];</div><div class="line"></div><div class="line">    [self.allMessageTableView endUpdates];</div><div class="line"></div><div class="line">    [[BHQuoteManager manager] PostDeleteMessageByMesasgeId:model.messageId Sucess:^(NSMutableDictionary *dicData) &#123;</div><div class="line"></div><div class="line"></div><div class="line">        NSLog(@&quot;%@&quot;,dicData);</div><div class="line"></div><div class="line">    &#125; failure:^(NSError *error) &#123;</div><div class="line">        NSLog(@&quot;%@&quot;,error);</div><div class="line">        BHAlert(@&quot;&quot;, @&quot;删除消息失败&quot;);</div><div class="line">    &#125;];</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(void) swipeTableCell:(MGSwipeTableCell*) cell didChangeSwipeState:(MGSwipeState)state gestureIsActive:(BOOL)gestureIsActive</div><div class="line">&#123;</div><div class="line">    NSString * str;</div><div class="line">    switch (state) &#123;</div><div class="line">        case MGSwipeStateNone: str = @&quot;None&quot;; break;</div><div class="line">        case MGSwipeStateSwippingLeftToRight: str = @&quot;SwippingLeftToRight&quot;; break;</div><div class="line">        case MGSwipeStateSwippingRightToLeft: str = @&quot;SwippingRightToLeft&quot;; break;</div><div class="line">        case MGSwipeStateExpandingLeftToRight: str = @&quot;ExpandingLeftToRight&quot;; break;</div><div class="line">        case MGSwipeStateExpandingRightToLeft: str = @&quot;ExpandingRightToLeft&quot;; break;</div><div class="line">    &#125;</div><div class="line">    NSLog(@&quot;Swipe state: %@ ::: Gesture: %@&quot;, str, gestureIsActive ? @&quot;Active&quot; : @&quot;Ended&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="六、UIScrollView"><a href="#六、UIScrollView" class="headerlink" title="六、UIScrollView"></a>六、UIScrollView</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (@available(iOS 11.0, *)) &#123;</div><div class="line">            _scrollView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><p>####七、线程错误</p><p><strong>Main Thread Checker: UI API called on a background thread: -[UIApplication applicationState]PID: 37870, TID: 5563145, Thread name: (none), Queue name: com.tencent.bugly.operationQueue (QOS: UTILITY), QoS: 17</strong></p><p>正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dispatch_async(dispatch_get_main_queue()</div></pre></td></tr></table></figure><p>error</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dispatch_sync(dispatch_get_main_queue()</div></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/code_diagnostics/main_thread_checker?language=objc" target="_blank" rel="external">参考</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、tableview-留空&quot;&gt;&lt;a href=&quot;#一、tableview-留空&quot; class=&quot;headerlink&quot; title=&quot;一、tableview 留空&quot;&gt;&lt;/a&gt;一、tableview 留空&lt;/h4&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="http://xuaninitial.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xuaninitial.com/2017/09/19/hello-world/"/>
    <id>http://xuaninitial.com/2017/09/19/hello-world/</id>
    <published>2017-09-19T05:05:31.000Z</published>
    <updated>2017-09-19T05:05:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>历时3天 node npm nvm git  hexo      搭建完成了     熟悉的hello word</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;历时3天 node npm nvm git  hexo      搭建完成了     熟悉的hello word&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick 
      
    
    </summary>
    
    
  </entry>
  
</feed>
